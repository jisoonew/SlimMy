<Window x:Class="SlimMy.View.ChattingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SlimMy.ViewModel" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        d:DataContext="{d:DesignInstance Type=local:ChattingWindowViewModel}"
        mc:Ignorable="d"
        Title="ChattingWindow" Height="550" Width="550"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">

    <Window.Resources>
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="6*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <!-- 상단 메뉴 버튼 -->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0" Width="534">
            <Grid HorizontalAlignment="Right" Width="534">
                <!-- 전체 화면 클릭 감지 -->
                <Border Background="Transparent">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding CloseAllPopupsCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Grid>
                        <!-- 상단 메뉴 버튼 -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
                            <Button x:Name="MenuButton" Command="{Binding TogglePopupCommand}">
                                <materialDesign:PackIcon Kind="Menu" Width="20" Height="20"/>
                            </Button>

                            <!-- 첫 번째 Popup (기본 옵션) -->
                            <Popup x:Name="MainOptionsPopup"
                   IsOpen="{Binding IsMainPopupOpen, Mode=TwoWay}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=OptionsButton}"
                   HorizontalOffset="52"
                   VerticalOffset="-32">
                                <Border Background="White" BorderBrush="Gray" BorderThickness="1" Padding="10">
                                    <StackPanel>
                                        <Button Content="방출하기" 
                                Command="{Binding ToggleBanPopupCommand}" 
                                Visibility="{Binding IsHost, Converter={StaticResource BoolToVisibilityConverter} , Mode=TwoWay}"  
                                Margin="0,5"/>
                                        <Button Content="방장 위임" 
                                Command="{Binding ToggleDelegatePopupCommand}" 
                                Visibility="{Binding IsHost, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}"  
                                Margin="0,5"/>
                                        <Button Content="채팅방 나가기" 
                                Command="{Binding ExitChatRoomCommand}" 
                                Margin="0,5"/>
                                    </StackPanel>
                                </Border>
                            </Popup>

                            <!-- 방장 위임 Popup -->
                            <Popup x:Name="DelegatePopup"
                   IsOpen="{Binding IsDelegatePopupOpen, Mode=TwoWay}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=OptionsButton}"
                   HorizontalOffset="52"
                   VerticalOffset="-32"
                                   StaysOpen="False">
                                <Border Background="White" BorderBrush="Gray" BorderThickness="1" Padding="10">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="방장 위임 목록" FontWeight="Bold" Margin="0,5"/>
                                        <!-- 예: 위임 가능한 멤버 목록이 ListBox로 표시된다 가정 -->
                                        <ListBox ItemsSource="{Binding DelegateCandidateList}" DisplayMemberPath="UsersNickName" SelectedItem="{Binding UserSelectedItem, Mode=TwoWay}" Margin="0,5" Height="100"/>
                                        <Button Content="위임하기" Command="{Binding ConfirmDelegateCommand}" Margin="0,5"/>
                                        <Button Content="취소" Command="{Binding CancelDelegateCommand}" Margin="0,5"/>
                                    </StackPanel>
                                </Border>
                            </Popup>

                            <!-- 방출하기 Popup -->
                            <Popup x:Name="BanPopup"
                   IsOpen="{Binding IsBanPopupOpen, Mode=TwoWay}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=OptionsButton}"
                   HorizontalOffset="52"
                   VerticalOffset="-32"
                                   StaysOpen="False">
                                <Border Background="White" BorderBrush="Gray" BorderThickness="1" Padding="10">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="멤버 목록" FontWeight="Bold" Margin="0,5"/>
                                        <!-- 예: 위임 가능한 멤버 목록이 ListBox로 표시된다 가정 -->
                                        <ListBox ItemsSource="{Binding BanCandidateList}" DisplayMemberPath="UsersNickName" SelectedItem="{Binding UserBanSelectedItem, Mode=TwoWay}" Margin="0,5" Height="100"/>
                                        <Button Content="방출하기" Command="{Binding BanCommand}" Margin="0,5"/>
                                        <Button Content="취소" Command="{Binding CancelBanCommand}" Margin="0,5"/>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </StackPanel>

        <ListView x:Name="messageListView" VirtualizingStackPanel.IsVirtualizing="False"
          VirtualizingStackPanel.ScrollUnit="Pixel" Grid.Row="1" Margin="0,0,0,10">
            <ItemsControl x:Name="MessageList" ItemsSource="{Binding MessageList}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock x:Name="MessageSenderText"
           Text="{Binding Message}"
           Margin="5"
           TextAlignment="{Binding Alignment}"
           TextWrapping="Wrap"
           HorizontalAlignment="Stretch"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ListView>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" x:Name="Send_Text_Box" Text="{Binding MessageText, UpdateSourceTrigger=PropertyChanged}" Height="70" />
            <Button Grid.Column="1" x:Name="Send_btn" Margin="10,0,0,0" Content="전송" Command="{Binding SendCommand}" Height="70" />
        </Grid>
    </Grid>
</Window>
